// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Other
}

enum Device {
  android
  web
  ios
}

enum Status {
  active
  inactive
  incomplete
  deleted
}

enum Speciality {
  child_care
  senior_care
}

enum ApplicationStatus {
  Upcoming
  Completed
  Canceled
  Missed
}

model careseekers_ {
  id           Int       @id @unique @default(autoincrement())
  stripeId     String    @unique
  fname        String?
  lname        String?
  email        String?   @unique
  mobile       String?   @unique
  dob          String?   @db.VarChar(500)
  gender       Gender?
  address      String?   @db.VarChar(1000)
  city         String?
  province     String?
  zipcode      String?
  device_type  Device    @default(web)
  android_id   Int?
  ios_id       Int?
  token        String    @db.VarChar(1000)
  status       Status    @default(incomplete)
  password     String?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  imageUrl     String?   @db.VarChar(500)
  planType     String?   @db.VarChar(100)
  planDuration String?   @db.VarChar(100)
  planPrice    String?   @db.VarChar(100)
  expiryDate   DateTime?
}

model caregivers_ {
  id                  Int         @id @unique @default(autoincrement())
  stripe_account_id   String?     @unique
  government_id       String?     @unique
  fname               String?
  lname               String?
  email               String?     @unique
  mobile              String?     @unique
  dob                 String?     @db.VarChar(500)
  gender              Gender?
  age                 Int?
  address             String?     @db.VarChar(1000)
  city                String?
  province            String?
  zipcode             String?
  device_type         Device      @default(web)
  android_id          Int?
  ios_id              Int?
  token               String      @db.VarChar(1000)
  status              Status      @default(incomplete)
  password            String?
  created_at          DateTime    @default(now())
  updated_at          DateTime    @updatedAt
  imageUrl            String?     @db.VarChar(500)
  videoUrl            String?     @db.VarChar(500)
  rating              Float?      @default(0.0)
  reviews             Int         @default(0)
  languages           String?     @db.MediumText
  isVerified          Boolean     @default(false)
  speciality          Speciality?
  experience          Float?
  comfortableWithPets Boolean?
  task                String?
  rate                Float?
  daysAWeek           String?     @db.MediumText
  workingHrs          String?     @db.MediumText
  bio                 String?     @db.MediumText
  certifications      String?     @db.VarChar(500)
  distance            String?     @db.VarChar(500)
  education           String?     @db.VarChar(500)
  smoke               String?
  videoSurveillance   String?
  socialmedia         String?     @db.VarChar(500)
  ref1Email           String?     @db.VarChar(500)
  ref1Name            String?     @db.VarChar(500)
  ref1Phone           String?     @db.VarChar(500)
  ref1Relation        String?     @db.VarChar(500)
  ref2Email           String?     @db.VarChar(500)
  ref2Name            String?     @db.VarChar(500)
  ref2Phone           String?     @db.VarChar(500)
  ref2Relation        String?     @db.VarChar(500)
}

model jobs_ {
  id                  Int      @id @unique @default(autoincrement())
  userId              Int
  additionalService   String   @db.MediumText
  age                 String   @db.VarChar(100)
  availability        Int
  comfortableWithPets Boolean
  experience          Int
  hourlyRate          Int
  date                String
  jobDescription      String   @db.MediumText
  language            String
  location            String   @db.VarChar(100)
  rating              Float
  speciality          String   @db.VarChar(100)
  time                String
  status              Status   @default(active)
  createdOn           DateTime @default(now())
  modifiedOn          DateTime @updatedAt
  responses           Int      @default(0)
  address             String?  @db.VarChar(300)
}

model appointments_ {
  id           Int               @id @unique @default(autoincrement())
  careseekerId Int
  caregiverId  Int
  totalPrice   Float
  date         String            @db.VarChar(100)
  time         String
  status       ApplicationStatus
  created_on   DateTime          @default(now())
  modified_on  DateTime          @updatedAt
}

model applicants {
  id          Int @id @unique @default(autoincrement())
  jobId       Int
  userId      Int
  applicantId Int
}

model reviews {
  id           Int    @id @unique @default(autoincrement())
  careseekerId Int
  caregiverId  Int
  review       String @db.VarChar(10000)
  rating       Int
}

model favourites {
  id           Int @id @unique @default(autoincrement())
  careseekerId Int
  caregiverId  Int
}

model subscription {
  id           Int      @id @unique @default(autoincrement())
  careseekerId Int
  type         String
  price        Float
  purchasedOn  DateTime @default(now())
}

model payment_history {
  id           Int      @id @unique @default(autoincrement())
  careseekerId Int
  description  String
  price        Float
  purchasedOn  DateTime @default(now())
}

model admin_kc {
  id         Int      @id @unique @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model chats {
  id           Int      @id @unique @default(autoincrement())
  senderId     Int
  receiverId   Int
  message      String
  created_on   DateTime @default(now())
  modified_on  DateTime @updatedAt
  isRead       Boolean  @default(false)
  senderType   String
  receiverType String
}

model contacts {
  id           Int      @id @unique @default(autoincrement())
  senderId     Int
  receiverId   Int
  created_on   DateTime @default(now())
  modified_on  DateTime @updatedAt
  senderType   String
  receiverType String
}

model documentProof {
  id          BigInt   @id @unique @default(autoincrement())
  caregiverId Int
  url         String
  createdAt   DateTime @default(now())
}

model certificates {
  id          BigInt   @id @unique @default(autoincrement())
  caregiverId Int
  url         String
  createdAt   DateTime @default(now())
}

model otherReviews {
  id          BigInt   @id @unique @default(autoincrement())
  caregiverId Int
  url         String
  createdAt   DateTime @default(now())
}
